{"version":3,"sources":["registerServiceWorker.js","reducers/authReducer.js","reducers/index.js","constants/index.js","store/index.js","components/navbar/index.js","containers/NavbarContainer.js","components/login/index.js","actions/index.js","containers/LoginContainer.js","components/home/index.js","components/private/index.js","containers/PrivateContainer.js","components/signup/index.js","containers/SignupContainer.js","App.js","withAuth.jsx","containers/AppContainer.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","initialState","isAuth","user","isLoading","rootReducer","combineReducers","auth","action","type","payload","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","Navbar","props","to","connect","Login","useState","email","password","values","setValues","handleInputChange","event","target","value","name","onSubmit","preventDefault","logginAction","placeholder","onChange","required","getUserAction","dispatch","fetch","response","json","method","body","JSON","stringify","headers","err","alert","Home","message","setMessage","useEffect","res","text","Private","onClick","logoutAction","Signup","signupAction","App","NavbarContainer","path","exact","component","ComponentToProtect","privateContainer","loading","redirect","status","Error","setState","this","Component","LoginContainer","SignupContainer","ReactDOM","render","AppContainer","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.89b5e8a3.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../constants';\n\nconst initialState =  {\n  isAuth: false,\n  user: {},\n  isLoading: false\n  \n};\n\nexport default function login(state = initialState, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case types.GET_USER_REQUEST:\n      return {\n        ...state,\n        isAuth: action.payload ? true : false,\n        user: action.payload\n      };\n    case types.LOGIN_REQUEST:\n      return {\n        ...state,\n        isAuth: false\n      };\n    case types.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuth: true,\n        user: action.payload\n      };\n    case types.SIGNUP_REQUEST:\n      return {\n        ...state,\n        isAuth: false\n      };\n    case types.SIGNUP_SUCCESS:\n      return {\n        ...state,\n      };\n    case types.LOGIN_ERROR:\n      return initialState;\n    case types.LOGOUT:\n      return initialState;\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\nimport auth from './authReducer';\n\nconst rootReducer = combineReducers({\n  auth\n});\n\nexport default rootReducer;","\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\n\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\n\nexport const LOGOUT = 'LOGOUT';\n\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Navbar = props => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/secret\">Secret</Link>\n        </li>\n        {!props.isAuth && (\n          <li>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  isAuth: PropTypes.bool\n};\n\nexport default Navbar;\n","import { connect } from 'react-redux';\nimport Navbar from '../components/navbar';\n\nconst mapStateToProps = (state, props) => {\n    return state.auth;\n}\n\n\nexport default connect(mapStateToProps)(Navbar);\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Login = props => {\n  const [values, setValues] = useState({ email: \"\", password: \"\" });\n\n  const handleInputChange = event => {\n    const { value, name } = event.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    props.logginAction(values);\n  };\n\n  return (\n    <>\n      {props.user && props.isAuth && <Redirect to=\"/\" />}\n      <form onSubmit={onSubmit}>\n        <h1>Login Below!</h1>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n          value={values.email}\n          onChange={handleInputChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n          value={values.password}\n          onChange={handleInputChange}\n          required\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","import * as types from \"./../constants\";\n\nexport const getUserAction = () => {\n  return dispatch => {\n    return fetch(\"/api/check/token\")\n      .then(response => response.json())\n      .then(json => {\n        console.log(json)\n        dispatch({ type: types.GET_USER_REQUEST, payload: json });\n      });\n  };\n};\n\nexport const logginAction = values => {\n  return dispatch => {\n    dispatch({ type: types.LOGIN_REQUEST });\n    return fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(json => {\n        console.log(json.json())\n        dispatch({ type: types.LOGIN_SUCCESS });\n        dispatch(getUserAction());\n      })\n      .catch(err => {\n        console.error(err);\n        alert(\"Error logging in please try again\");\n      });\n  };\n};\n\nexport const signupAction = values => {\n  return dispatch => {\n    dispatch({ type: types.SIGNUP_REQUEST });\n    return fetch(\"/api/auth/signup\", {\n      method: \"POST\",\n      body: JSON.stringify(values),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(json => {\n        dispatch({ type: types.SIGNUP_SUCCESS });\n        dispatch(getUserAction());\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n};\n\nexport const logoutAction = () => {\n  return dispatch => {\n    return fetch(\"/api/auth/logout\").then(response => {\n      dispatch({ type: types.LOGOUT });\n    });\n  };\n};\n","import { connect } from \"react-redux\";\nimport Login from \"./../components/login\";\nimport { logginAction } from \"../actions\";\n\nconst mapStateToProps = (state, props) => {\n  return state.auth;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  logginAction: (values) => dispatch(logginAction(values))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState, useEffect } from 'react';\n\nconst Home = () => {\n    const [message, setMessage] = useState(\"\");\n\n    useEffect(() => {\n      fetch(\"/api/home\")\n        .then(res => res.text())\n        .then(res => setMessage(res));\n    }, []);\n  \n  \n    return (\n      <div>\n        <h1>Home</h1>\n        <p>{message}</p>\n      </div>\n    );\n}\n\nexport default Home;","import React, {  useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Private = (props) => {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/api/secret\")\n      .then(res => res.text())\n      .then(res => setMessage(res));\n  }, []);\n\n  const logout = () => {\n    props.logoutAction();\n  }\n\n  return (\n    <div>\n      <h1>Private</h1>\n      <p>{message}</p>\n      <button onClick={()=> logout()} >Logout</button>\n    </div>\n  );\n};\n\nPrivate.propTypes = {\n  isAuth: PropTypes.bool,\n  logoutAction: PropTypes.func.isRequired\n};\n\nexport default Private;","import { connect } from 'react-redux';\nimport Private from '../components/private';\nimport { logoutAction } from '../actions';\n\nconst mapStateToProps = (state, props) => {\n    return state.auth;\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    logoutAction : () => dispatch(logoutAction())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Private);\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Signup = props => {\n  const [values, setValues] = useState({ email: \"\", password: \"\" });\n\n  const handleInputChange = event => {\n    const { value, name } = event.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    props.signupAction(values);\n    \n  };\n\n  return (\n    <>\n      {props.user && props.isAuth && <Redirect to=\"/\" />}\n      <form onSubmit={onSubmit}>\n        <h1>Signup Below!</h1>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n          value={values.email}\n          onChange={handleInputChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n          value={values.password}\n          onChange={handleInputChange}\n          required\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </>\n  );\n};\n\nexport default Signup;\n","import { connect } from \"react-redux\";\nimport Signup from \"../components/signup\";\nimport { signupAction } from \"../actions\";\n\nconst mapStateToProps = (state, props) => {\n  return state.auth;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signupAction: (values) => dispatch(signupAction(values))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport withAuth from \"./withAuth\";\nimport PropTypes from 'prop-types';\nimport NavbarContainer from \"./containers/NavbarContainer\";\nimport LoginContainer from \"./containers/LoginContainer\";\nimport Home from \"./components/home\";\nimport privateContainer from \"./containers/PrivateContainer\";\nimport SignupContainer from \"./containers/SignupContainer\";\n\nconst App = props => {\n  console.log(props);\n  useEffect(() =>{\n    props.getUserAction()\n  }, [])\n  return (\n\n    <div>\n      <h1>{props.user && props.user.email}</h1>\n      <NavbarContainer/>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/secret\" component={withAuth(privateContainer)} />\n        <Route path=\"/login\" component={LoginContainer} />\n        <Route path=\"/signup\" component={SignupContainer} />\n      </Switch>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  isAuth: PropTypes.bool,\n  getUserAction: PropTypes.func.isRequired\n\n};\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n\n    componentDidMount() {\n      fetch('/api/check/token')\n        .then(res => {\n          if (res.status === 200) {\n            this.setState({ loading: false });\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({ loading: false, redirect: true });\n        });\n    }\n\n\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/login\" />;\n      }\n      return <ComponentToProtect {...this.props} />;\n    }\n  }\n}","import { connect } from \"react-redux\";\nimport App from \"../App\";\nimport { getUserAction } from \"../actions\";\n\nconst mapStateToProps = (state, props) => {\n  return state.auth;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getUserAction: () => dispatch(getUserAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport AppContainer from \"./containers/AppContainer\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}